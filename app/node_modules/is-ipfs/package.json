{
  "_args": [
    [
      {
        "raw": "is-ipfs@^0.3.0",
        "scope": null,
        "escapedName": "is-ipfs",
        "name": "is-ipfs",
        "rawSpec": "^0.3.0",
        "spec": ">=0.3.0 <0.4.0",
        "type": "range"
      },
      "/home/gideon/mix-share/app/node_modules/ipfs-api"
    ]
  ],
  "_from": "is-ipfs@>=0.3.0 <0.4.0",
  "_id": "is-ipfs@0.3.2",
  "_inCache": true,
  "_location": "/is-ipfs",
  "_nodeVersion": "8.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/is-ipfs-0.3.2.tgz_1505112584382_0.725619787350297"
  },
  "_npmUser": {
    "name": "daviddias",
    "email": "daviddias.p@gmail.com"
  },
  "_npmVersion": "5.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "is-ipfs@^0.3.0",
    "scope": null,
    "escapedName": "is-ipfs",
    "name": "is-ipfs",
    "rawSpec": "^0.3.0",
    "spec": ">=0.3.0 <0.4.0",
    "type": "range"
  },
  "_requiredBy": [
    "/ipfs-api",
    "/ipld-dag-pb"
  ],
  "_resolved": "https://registry.npmjs.org/is-ipfs/-/is-ipfs-0.3.2.tgz",
  "_shasum": "c4650b838e36fd0151de5896b2ff319fe8936182",
  "_shrinkwrap": null,
  "_spec": "is-ipfs@^0.3.0",
  "_where": "/home/gideon/mix-share/app/node_modules/ipfs-api",
  "author": {
    "name": "Francisco Dias",
    "email": "francisco@baiodias.com",
    "url": "http://franciscodias.net/"
  },
  "browser": {
    "fs": false
  },
  "bugs": {
    "url": "https://github.com/xicombd/is-ipfs/issues"
  },
  "contributors": [
    {
      "name": "David Dias",
      "email": "daviddias.p@gmail.com"
    },
    {
      "name": "Francisco Baio Dias",
      "email": "xicombd@gmail.com"
    },
    {
      "name": "Marcin Rataj",
      "email": "lidel@lidel.org"
    },
    {
      "name": "nginnever",
      "email": "ginneversource@gmail.com"
    }
  ],
  "dependencies": {
    "bs58": "^4.0.1",
    "cids": "~0.5.1",
    "multihashes": "~0.4.9"
  },
  "description": "A set of utilities to help identify IPFS resources",
  "devDependencies": {
    "aegir": "^11.0.2",
    "chai": "^4.1.2",
    "pre-commit": "^1.2.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-82V1j4LMkYy7H4seQQzOWqo7FiW3I64/1/ryo3dhtWKfOvm7ZolLMRQQfGKs4OXWauh5rAkPnamVcRISHwhmpQ==",
    "shasum": "c4650b838e36fd0151de5896b2ff319fe8936182",
    "tarball": "https://registry.npmjs.org/is-ipfs/-/is-ipfs-0.3.2.tgz"
  },
  "gitHead": "6bfe4674d754a59fbd072661476d9d5b44d28837",
  "homepage": "https://github.com/xicombd/is-ipfs",
  "keywords": [
    "ipfs"
  ],
  "license": "MIT",
  "main": "src/index.js",
  "maintainers": [
    {
      "name": "daviddias",
      "email": "daviddias.p@gmail.com"
    },
    {
      "name": "xicombd",
      "email": "xicombd@gmail.com"
    }
  ],
  "name": "is-ipfs",
  "optionalDependencies": {},
  "pre-commit": [
    "test",
    "lint"
  ],
  "readme": "is-ipfs\n====\n\n[![build status](https://secure.travis-ci.org/xicombd/is-ipfs.svg)](http://travis-ci.org/xicombd/is-ipfs)\n[![dignified.js](https://img.shields.io/badge/follows-dignified.js-blue.svg?style=flat-square)](https://github.com/dignifiedquire/dignified.js)\n\nA set of utilities to help identify [IPFS](https://ipfs.io/) resources.\n\n\n## Install\n\n### In Node.js through npm\n\n```bash\n$ npm install --save is-ipfs\n```\n\n### Browser: Browserify, Webpack, other bundlers\n\nThe code published to npm that gets loaded on require is in fact an ES5 transpiled version with the right shims added. This means that you can require it and use with your favorite bundler without having to adjust asset management process.\n\n```js\nvar is-ipfs = require('is-ipfs')\n```\n\n\n### In the Browser through `<script>` tag\n\nLoading this module through a script tag will make the ```IsIpfs``` obj available in the global namespace.\n\n```\n<script src=\"https://unpkg.com/is-ipfs/dist/index.min.js\"></script>\n<!-- OR -->\n<script src=\"https://unpkg.com/is-ipfs/dist/index.js\"></script>\n```\n\n## Usage\n```javascript\nconst isIPFS = require('is-ipfs')\n\nisIPFS.multihash('QmYjtig7VJQ6XsnUjqqJvj7QaMcCAwtrgNdahSiFofrE7o') // true\nisIPFS.multihash('noop') // false\n\nisIPFS.url('https://ipfs.io/ipfs/QmYjtig7VJQ6XsnUjqqJvj7QaMcCAwtrgNdahSiFofrE7o') // true\nisIPFS.url('https://ipfs.io/ipns/github.com') // true\nisIPFS.url('https://github.com/ipfs/js-ipfs/blob/master/README.md') // false\nisIPFS.url('https://google.com') // false\n\nisIPFS.path('/ipfs/QmYjtig7VJQ6XsnUjqqJvj7QaMcCAwtrgNdahSiFofrE7o') // true\nisIPFS.path('/ipns/github.com') // true\nisIPFS.path('/ipfs/js-ipfs/blob/master/README.md') // false\n\nisIPFS.urlOrPath('https://ipfs.io/ipfs/QmYjtig7VJQ6XsnUjqqJvj7QaMcCAwtrgNdahSiFofrE7o') // true\nisIPFS.urlOrPath('https://ipfs.io/ipns/github.com') // true\nisIPFS.urlOrPath('/ipfs/QmYjtig7VJQ6XsnUjqqJvj7QaMcCAwtrgNdahSiFofrE7o') // true\nisIPFS.urlOrPath('/ipns/github.com') // true\nisIPFS.urlOrPath('https://google.com') // false\n\nisIPFS.ipfsUrl('https://ipfs.io/ipfs/QmYjtig7VJQ6XsnUjqqJvj7QaMcCAwtrgNdahSiFofrE7o') // true\nisIPFS.ipfsUrl('https://ipfs.io/ipfs/invalid-hash') // false\n\nisIPFS.ipnsUrl('https://ipfs.io/ipfs/QmYjtig7VJQ6XsnUjqqJvj7QaMcCAwtrgNdahSiFofrE7o') // false\nisIPFS.ipnsUrl('https://ipfs.io/ipns/github.com') // true\n\nisIPFS.ipfsPath('/ipfs/QmYjtig7VJQ6XsnUjqqJvj7QaMcCAwtrgNdahSiFofrE7o') // true\nisIPFS.ipfsPath('/ipfs/invalid-hash') // false\n\nisIPFS.ipnsPath('/ipfs/QmYjtig7VJQ6XsnUjqqJvj7QaMcCAwtrgNdahSiFofrE7o') // false\nisIPFS.ipnsPath('/ipns/github.com') // true\n```\n\n## API\n\n### `isIPFS.multihash(hash)`\n\nReturns `true` if the provided string is a valid `multihash` or `false` otherwise.\n\n### `isIPFS.url(url)`\n\nReturns `true` if the provided string is a valid IPFS or IPNS url or `false` otherwise.\n\n### `isIPFS.path(path)`\n\nReturns `true` if the provided string is a valid IPFS or IPNS path or `false` otherwise.\n\n### `isIPFS.urlOrPath(path)`\n\nReturns `true` if the provided string is a valid IPFS or IPNS url or path or `false` otherwise.\n\n### `isIPFS.ipfsUrl(url)`\n\nReturns `true` if the provided string is a valid IPFS url or `false` otherwise.\n\n### `isIPFS.ipnsUrl(url)`\n\nReturns `true` if the provided string is a valid IPNS url or `false` otherwise.\n\n### `isIPFS.ipfsPath(path)`\n\nReturns `true` if the provided string is a valid IPFS path or `false` otherwise.\n\n### `isIPFS.ipnsPath(path)`\n\nReturns `true` if the provided string is a valid IPNS path or `false` otherwise.\n\n\n**Note:** the regex used for these checks is also exported as `isIPFS.urlPattern`\n\n## License\n\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/xicombd/is-ipfs.git"
  },
  "scripts": {
    "build": "aegir-build",
    "coverage": "aegir-coverage",
    "coverage-publish": "aegir-coverage publish",
    "lint": "aegir-lint",
    "release": "aegir-release",
    "release-major": "aegir-release --type major",
    "release-minor": "aegir-release --type minor",
    "test": "aegir-test",
    "test:browser": "aegir-test browser",
    "test:node": "aegir-test node"
  },
  "version": "0.3.2"
}
