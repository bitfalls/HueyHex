{
  "_args": [
    [
      {
        "raw": "peer-info@~0.11.0",
        "scope": null,
        "escapedName": "peer-info",
        "name": "peer-info",
        "rawSpec": "~0.11.0",
        "spec": ">=0.11.0 <0.12.0",
        "type": "range"
      },
      "/home/gideon/mix-share/app/node_modules/ipfs-api"
    ]
  ],
  "_from": "peer-info@>=0.11.0 <0.12.0",
  "_id": "peer-info@0.11.0",
  "_inCache": true,
  "_location": "/peer-info",
  "_nodeVersion": "8.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/peer-info-0.11.0.tgz_1504436635616_0.8338304217904806"
  },
  "_npmUser": {
    "name": "daviddias",
    "email": "daviddias.p@gmail.com"
  },
  "_npmVersion": "5.3.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "peer-info@~0.11.0",
    "scope": null,
    "escapedName": "peer-info",
    "name": "peer-info",
    "rawSpec": "~0.11.0",
    "spec": ">=0.11.0 <0.12.0",
    "type": "range"
  },
  "_requiredBy": [
    "/ipfs-api"
  ],
  "_resolved": "https://registry.npmjs.org/peer-info/-/peer-info-0.11.0.tgz",
  "_shasum": "c14b6a7d139a0d4a2db3160b4d4cc15bf6bf06e0",
  "_shrinkwrap": null,
  "_spec": "peer-info@~0.11.0",
  "_where": "/home/gideon/mix-share/app/node_modules/ipfs-api",
  "author": {
    "name": "David Dias",
    "email": "daviddias@ipfs.io"
  },
  "bugs": {
    "url": "https://github.com/libp2p/js-peer-info/issues"
  },
  "contributors": [
    {
      "name": "Arnaud",
      "email": "arnaud.valensi@gmail.com"
    },
    {
      "name": "David Dias",
      "email": "daviddias.p@gmail.com"
    },
    {
      "name": "David Dias",
      "email": "mail@daviddias.me"
    },
    {
      "name": "Friedel Ziegelmayer",
      "email": "dignifiedquire@gmail.com"
    },
    {
      "name": "Greenkeeper",
      "email": "support@greenkeeper.io"
    },
    {
      "name": "Richard Littauer",
      "email": "richard.littauer@gmail.com"
    },
    {
      "name": "Sid Harder",
      "email": "sideharder@gmail.com"
    },
    {
      "name": "Stephen Whitmore",
      "email": "stephen.whitmore@gmail.com"
    },
    {
      "name": "haad",
      "email": "haad@headbanggames.com"
    },
    {
      "name": "npmcdn-to-unpkg-bot",
      "email": "npmcdn-to-unpkg-bot@users.noreply.github.com"
    },
    {
      "name": "Łukasz Kurowski",
      "email": "crackcomm@users.noreply.github.com"
    }
  ],
  "dependencies": {
    "lodash.uniqby": "^4.7.0",
    "multiaddr": "^3.0.0",
    "peer-id": "^0.10.0"
  },
  "description": "IPFS Peer abstraction JavaScript implementation",
  "devDependencies": {
    "aegir": "^11.0.2",
    "buffer-loader": "0.0.1",
    "chai": "^4.1.2",
    "dirty-chai": "^2.0.1",
    "pre-commit": "^1.2.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-tU2p8DnunCrNHc5Q6mD9apUgjUgIT26qZjAHBabBTTfV+NwP7yfSI+MxxS6Wjr3f3TRv/dUrATQ4IQbp5Ne56A==",
    "shasum": "c14b6a7d139a0d4a2db3160b4d4cc15bf6bf06e0",
    "tarball": "https://registry.npmjs.org/peer-info/-/peer-info-0.11.0.tgz"
  },
  "engines": {
    "node": ">=6.0.0",
    "npm": ">=6.0.0"
  },
  "gitHead": "8597f337c582e4a0b808bf0fc539845d4dadc776",
  "homepage": "https://github.com/libp2p/js-peer-info",
  "keywords": [
    "IPFS"
  ],
  "license": "MIT",
  "main": "src/index.js",
  "maintainers": [
    {
      "name": "daviddias",
      "email": "daviddias.p@gmail.com"
    }
  ],
  "name": "peer-info",
  "optionalDependencies": {},
  "pre-commit": [
    "lint",
    "test"
  ],
  "readme": "# js-peer-info\n\n[![](https://img.shields.io/badge/made%20by-Protocol%20Labs-blue.svg?style=flat-square)](http://ipn.io)\n[![](https://img.shields.io/badge/freenode-%23ipfs-blue.svg?style=flat-square)](http://webchat.freenode.net/?channels=%23ipfs)\n[![Build Status](https://travis-ci.org/libp2p/js-peer-info.svg?style=flat-square)](https://travis-ci.org/libp2p/js-peer-info)\n[![Coverage Status](https://coveralls.io/repos/github/libp2p/js-peer-info/badge.svg?branch=master)](https://coveralls.io/github/libp2p/js-peer-info?branch=master)\n[![Dependency Status](https://david-dm.org/libp2p/js-peer-info.svg?style=flat-square)](https://david-dm.org/libp2p/js-peer-info)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square)](https://github.com/feross/standard)\n[![standard-readme compliant](https://img.shields.io/badge/standard--readme-OK-green.svg?style=flat-square)](https://github.com/RichardLitt/standard-readme)\n![](https://img.shields.io/badge/npm-%3E%3D3.0.0-orange.svg?style=flat-square)\n![](https://img.shields.io/badge/Node.js-%3E%3D6.0.0-orange.svg?style=flat-square)\n\n## Table of Contents\n\n- [Installation](#installation)\n  - [npm](#npm)\n  - [Node.JS, Browserify, Webpack](#nodejs-browserify-webpack)\n  - [Browser: `<script>` Tag](#browser-script-tag)\n- [Usage](#usage)\n- [API](#api)\n  - [`PeerInfo.create([id, ] callback)`](#peerinfocreateid-callback)\n  - [`new PeerInfo(id)`](#new-peerinfoid)\n  - [`.connect(ma)`](#connectma)\n  - [`.disconnect()`](#connectma)\n  - [`.isConnected()`](#connectma)\n  - [`.multiaddrs`](#multiaddrs)\n  - [`.multiaddrs.add(addr)`](#multiaddraddaddr)\n  - [`.multiaddrs.addSafe(addr)`](#multiaddraddsafeaddr)\n  - [`.multiaddrs.forEach(fn)`](#multiaddrforeachfn)\n  - [`.multaiddrs.size`]((#multiaddrsize)\n  - [`.multiaddrs.has()`]((#multiaddrhas)\n  - [`.multiaddrs.delete(addr)`](#multiaddrdeleteaddr)\n  - [`.multiaddrs.toArray()`](#multiaddrtoarray)\n  - [`.multiaddrs.replace(existing, fresh)`](#multiaddrreplaceexisting-fresh)\n  - [`.multiaddrs.distinct()`](#distinct)\n- [Contribute](#contribute)\n- [License](#license)\n\n## Installation\n\n### npm\n\n```sh\n> npm i peer-info\n```\n\n### Node.JS, Browserify, Webpack\n\n```js\nconst PeerInfo = require('peer-info')\n```\n\n### Browser: `<script>` Tag\n\nLoading this module through a script tag will make the `PeerInfo` obj available in the global namespace.\n\n```html\n<script src=\"https://unpkg.com/peer-info/dist/index.min.js\"></script>\n<!-- OR -->\n<script src=\"https://unpkg.com/peer-info/dist/index.js\"></script>\n```\n\n## Usage\n\n```js\nconst PeerInfo = require('peer-info')\nconst peer = new PeerInfo()\n\n// TCP port 5001\npeer.multiaddrs.add('/ip4/1.2.3.4/tcp/5001')\n\n// UDP port 8001\npeer.multiaddrs.add('/ip4/1.2.3.4/udp/8001')\n\n// mic/speaker soundwaves using frequencies 697 and 1209\npeer.multiaddrs.add('/sonic/bfsk/697/1209')\n```\n\n## API\n\n```js\nconst PeerInfo = require('peer-info')\n```\n\n### `PeerInfo.create([id, ] callback)`\n\n- `id: PeerID`, optional\n- `callback: Function` with signature `function (err, peerInfo) {}`\n\nCreates a new PeerInfo instance and if no `id` is passed it\ngenerates a new underlying [PeerID](https://github.com/libp2p/js-peer-id)\nfor it.\n\n### `new PeerInfo(id)`\n\n- `id: PeerID`\n\nCreates a new PeerInfo instance from an existing PeerID.\n\n### `multiaddrs`\n\nA list of multiaddresses instances that `peer` can be reached at.\n\n### `.multiaddrs.add(addr)`\n\n- `addr: Multiaddr`\n\nAdds a new multiaddress that `peer` can be reached at. `addr` is an instance of\na [multiaddr](https://github.com/libp2p/js-multiaddr).\n\n### `.multiaddrs.addSafe(addr)`\n\n- `addr: Multiaddr`\n\nThe `addSafe` call, in comparison to `add`, will only add the multiaddr to\n`multiaddrs` if the same multiaddr tries to be added twice.\n\nThis is a simple mechanism to prevent `multiaddrs` from becoming bloated with\nunusable addresses, which happens when we exchange observed multiaddrs with\npeers which will not provide a useful multiaddr to be shared to the rest of the\nnetwork (e.g. a multiaddr referring to a peer inside a LAN being shared to the\noutside world).\n\n### `.multiaddrs.delete(addr)`\n\n- `addr: Multiaddr`\n\nRemoves a multiaddress instance `addr` from `peer`.\n\n### `.multiaddrs.replace(existing, fresh)`\n\n- `existing: Multiaddr`\n- `fresh: Multiaddr`\n\nRemoves the array of multiaddresses `existing` from `peer`, and adds the array\nof multiaddresses `fresh`.\n\n## Contribute\n\nPRs accepted.\n\nSmall note: If editing the Readme, please conform to the [standard-readme](https://github.com/RichardLitt/standard-readme) specification.\n\n## License\n\n[MIT © David Dias](LICENSE)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/libp2p/js-peer-info.git"
  },
  "scripts": {
    "build": "aegir-build",
    "coverage": "aegir-coverage",
    "coverage-publish": "aegir-coverage publish",
    "lint": "aegir-lint",
    "release": "aegir-release",
    "release-major": "aegir-release --type major",
    "release-minor": "aegir-release --type minor",
    "test": "aegir-test",
    "test:browser": "aegir-test --env browser",
    "test:node": "aegir-test --env node"
  },
  "version": "0.11.0",
  "warnings": [
    {
      "code": "ENOTSUP",
      "required": {
        "node": ">=6.0.0",
        "npm": ">=6.0.0"
      },
      "pkgid": "peer-info@0.11.0"
    }
  ]
}
